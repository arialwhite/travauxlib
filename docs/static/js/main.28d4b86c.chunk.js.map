{"version":3,"sources":["devis/header/Header.tsx","config.types.ts","devis/footer/Footer.tsx","devis/content/view-by-location/groupBy.functions.ts","devis/content/common/group/line/LineItem.tsx","devis/content/common/group/Group.tsx","devis/content/view-by-location/ViewByLocation.tsx","devis/content/view-by-lot/SectionBloc.tsx","devis/content/view-by-lot/ViewByLot.tsx","devis/Devis.tsx","tools/Tools.tsx","App.tsx","devis/useDevis.ts","serviceWorker.ts","index.tsx"],"names":["Header","props","company","deal","formattedDate","date","split","reverse","join","formatDate","react_default","a","createElement","className","statutEntreprise","name","address","postalCode","city","customerName","billingAddress","DisplayMode","ShowTva","tva","index","key","taux","montant","Footer","devis","prixTotalHTAvantRemise","montantRemise","montantsTVA","map","prixTotalTTC","DEFAULT_VIEW_CONFIG","displayMode","BY_LOT","DEFAULT_LOCATION","label","surface","uuid","groupLinesByLocation","sections","locations","allGroups","concat","location","lines","createsEmptyGroups","flatMap","section","lots","lot","lignes","reduce","collectLine","filter","group","length","line","locationIds","some","findGroups","locationsDetails","getLocationIds","forEach","push","LineItem","designation","description","prixUnitaireHT","quantite","prixHT","Group","totalHt","scope","LineItem_LineItem","ViewByLocation","groups","Group_Group","getPrixHT","x","y","SectionBloc","prixTotalHT","ViewtByLot","SectionBloc_SectionBloc","Devis","ContentView","viewConfig","BY_LOCATION","getContentView","title","Header_Header","Footer_Footer","Tools","Link","viewConfigChange","active","callback","cssClass","onClick","App","_useState","useState","_useState2","Object","slicedToArray","setViewConfig","_useDevis","url","setDevis","_useState3","_useState4","loading","setLoading","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","stop","apply","this","arguments","fetchData","useDevis","Tools_Tools","Devis_Devis","Boolean","window","hostname","match","Array","prototype","lambda","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28d4b86c.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nimport { Company, Deal, LOCAL_DATE } from '../devis.types';\n\ntype Props = { company: Company, deal: Deal, date: LOCAL_DATE };\n\nexport const Header: React.FC<Props> = (props: Props) => {\n  const { company, deal, date } = props;\n\n  const formattedDate = formatDate(date);\n\n  return (\n    <header className=\"d-flex flex-row flex-nowrap mt-5\">\n      <div className=\"p-2 col-7\">\n        <div className=\"header-company\">\n          <div className=\"header-line\">{company.statutEntreprise} <strong>{company.name}</strong></div>\n          <div className=\"header-line\">{company.address}</div>\n          <div className=\"header-line\">{company.postalCode} {company.city}</div>\n        </div>\n      </div>\n      <div className=\"p-2 col\">\n        <div className=\"header-deal pl-4\">\n          <div className=\"header-line\">Le {formattedDate}</div>\n          <div className=\"header-line\">{deal.customerName}</div>\n          <div className=\"header-line\">{deal.billingAddress.address}</div>\n          <div className=\"header-line\">{deal.billingAddress.postalCode} {deal.billingAddress.city}</div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nfunction formatDate(date: LOCAL_DATE): string {\n  return date ? date.split('-').reverse().join('/') : '';\n}","/**\n * Configuration of the view\n */\n\nexport enum DisplayMode {\n  BY_LOT,\n  BY_LOCATION\n}\n\nexport type ViewConfig = {\n  displayMode: DisplayMode;\n};\n\nexport const DEFAULT_VIEW_CONFIG: ViewConfig = {\n  displayMode: DisplayMode.BY_LOT\n};","import React from 'react';\nimport './Footer.css';\nimport { Devis, Tva } from '../devis.types';\n\ntype Props = { devis: Devis };\n\nconst ShowTva = (tva: Tva, index: number) => (\n  <tr key={index}>\n    <td>TVA {tva.taux}%</td>\n    <td>{tva.montant} €</td>\n  </tr>\n);\n\nexport const Footer: React.FC<Props> = (props: Props) => {\n  const { devis } = props;\n\n  return (\n    <footer className=\"block d-2\">\n      <h3 className=\"footer-title h3 mb-4\">Totaux</h3>\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            <td>Total HT</td>\n            <td>{devis.prixTotalHTAvantRemise} €</td>\n          </tr>\n          <tr>\n            <td>Remise</td>\n            <td>{devis.montantRemise} €</td>\n          </tr>\n          <tr>\n            <td>Total HT après remise</td>\n            <td>{devis.montantRemise + devis.prixTotalHTAvantRemise} €</td>\n          </tr>\n          {devis.montantsTVA.map(ShowTva)}\n          <tr>\n            <td>Total TTC</td>\n            <td>{devis.prixTotalTTC} €</td>\n          </tr>\n        </tbody>\n      </table>\n    </footer>\n  );\n};\n","import { Line, Section, Location } from \"../../devis.types\";\n\nexport type LinesGroup = { location: Location, lines: Array<Line> }; // lines by location aggregate\n\nconst DEFAULT_LOCATION: Location = { label: 'Autres prestations', surface: null, uuid: 'default' };\n\n/**\n * Group the lines by their locations\n * @param sections \n * @param locations \n */\nexport function groupLinesByLocation(sections: Array<Section>, locations: Array<Location>): Array<LinesGroup> {\n  if (!sections) {\n    return [];\n  }\n\n  // Creates an empty group for each location\n  const allGroups = createsEmptyGroups(locations);\n\n  // Fill the groups with lines\n  return sections.flatMap(section => section.lots)\n    .flatMap(lot => lot.lignes)\n    .reduce(collectLine, allGroups)\n    .filter(group => group.lines.length > 0);\n}\n\n/**\n * Add the line to the groups which it belongs\n * @param allGroups Groups of lines\n * @param line A line\n */\nfunction collectLine(allGroups: Array<LinesGroup>, line: Line): Array<LinesGroup> {\n  const locationsIds = getLocationIds(line);\n\n  findGroups(allGroups, locationsIds).forEach(\n    group => group.lines.push(line)\n  );\n\n  return allGroups;\n}\n\n/**\n * Find the lines groups that matches line's locations\n * @param allGroups Groups of lines\n * @param locationIds List of UUIDs of line locations\n */\nfunction findGroups(allGroups: Array<LinesGroup>, locationIds: Array<string>): Array<LinesGroup> {\n  return allGroups.filter(\n    group => locationIds.some(uuid => uuid === group.location.uuid)\n  );\n}\n\n/**\n * Creates the group of lines\n * @param locations \n */\nfunction createsEmptyGroups(locations: Array<Location>): Array<LinesGroup> {\n  return locations.concat([DEFAULT_LOCATION])\n    .map(location => {\n      return { location, lines: [] };\n    });\n}\n\n/**\n * Get location ids (UUID) of a line\n * @param line \n */\nfunction getLocationIds(line: Line): Array<string> {\n  const locations = line.locationsDetails.locations;\n\n  if (locations && locations.length) {\n    return locations.map(location => location.uuid);\n  } else {\n    return [DEFAULT_LOCATION.uuid];\n  }\n}","/**\n * Line component\n */\n\nimport React from 'react';\nimport './LineItem.css';\nimport { Line } from '../../../../devis.types';\n\ntype Props = { line: Line, index: number };\n\nexport const LineItem: React.FC<Props> = (props: Props) => {\n  const { line, index } = props;\n\n  return (\n    <tr key={index}>\n      <td>\n        <div className=\"pr-2 content-line-designation\">\n          {line.designation}\n        </div>\n        <div className=\"mt-2 mb-4 pr-2 content-line-description\">\n          {line.description}\n        </div>\n      </td>\n      <td>{line.prixUnitaireHT} €</td>\n      <td>{line.quantite}</td>\n      <td>{line.prixHT} €</td>\n    </tr>\n  );\n};","/**\n * Group/Lot component\n */\n\nimport React from 'react';\nimport './Group.css';\nimport { Line } from \"../../../devis.types\";\nimport { LineItem } from './line/LineItem';\n\ntype Props = { lines: Array<Line>, label: string, totalHt: number, index: number };\n\nexport const Group: React.FC<Props> = (props: Props) => {\n  const { lines, label, totalHt, index } = props;\n\n  return (\n    <div className=\"content-group\" key={index}>\n      <h3 className=\"content-group-title h3 mb-4\">{label} - {totalHt} € HT</h3>\n      <table className=\"table\">\n        <colgroup>\n          <col className=\"pr-5\" />\n          <col className=\"content-group-column\" />\n          <col className=\"content-group-column\" />\n          <col className=\"content-group-column\" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th className=\"content-group-head\" scope=\"col\">Description</th>\n            <th className=\"content-group-head\" scope=\"col\">Prix unitaire HT</th>\n            <th className=\"content-group-head\" scope=\"col\">Quantité</th>\n            <th className=\"content-group-head\" scope=\"col\">Prix HT</th>\n          </tr>\n        </thead>\n        <tbody>\n          {lines.map((line, index) => {\n            return <LineItem line={line} index={index}></LineItem>\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};","/**\n * ViewByLocation Component - Group lines by location\n */\n\nimport React from 'react';\nimport { ContentView, ContentViewProps } from \"../common/view.types\";\nimport { LinesGroup, groupLinesByLocation } from './groupBy.functions';\nimport { Group } from '../common/group/Group';\n\nexport const ViewByLocation: ContentView = (props: ContentViewProps) => {\n  const { sections, locations } = props;\n\n  const groups = groupLinesByLocation(sections, locations);\n\n  return (\n    <div className=\"content p-2\">\n      {groups.map((group, index) => {\n        return <Group lines={group.lines} label={group.location.label} totalHt={getPrixHT(group)} index={index}></Group>\n      })}\n    </div>\n  );\n};\n\nfunction getPrixHT(group: LinesGroup): number {\n  return group.lines.map(line => line.prixHT).reduce((x, y) => x + y);\n}","/**\n * SectionBloc Component - Show section lots\n */\n\nimport React from 'react';\nimport { Section } from \"../../devis.types\";\nimport { Group } from '../common/group/Group';\n\ntype Props = { section: Section, index: number };\n\nexport const SectionBloc: React.FC<Props> = (props: Props) => {\n  const { section, index } = props;\n\n  return (\n    <div className=\"d-flex flex-column flex-nowrap m-2\" key={index}>\n      {section.lots.map((lot, index) => {\n        return <Group lines={lot.lignes} label={lot.label} totalHt={lot.prixTotalHT} index={index}></Group>\n      })}\n    </div>\n  );\n}","/**\n * ViewtByLot Component - Group lines by lot\n */\n\nimport React from 'react';\n\nimport { ContentView, ContentViewProps } from '../common/view.types';\nimport { SectionBloc } from './SectionBloc';\n\nexport const ViewtByLot: ContentView = (props: ContentViewProps) => {\n  const { sections } = props;\n\n  return (\n    <div className=\"content p-2\">\n      {sections.map((section, index) => {\n        return <SectionBloc section={section} index={index}></SectionBloc>\n      })}\n    </div>\n  );\n}","import React from 'react';\nimport './Devis.css';\nimport { Header } from './header/Header';\nimport { Footer } from './footer/Footer';\nimport { Devis as DevisModel } from './devis.types';\nimport { ViewConfig, DisplayMode } from '../config.types';\nimport { ContentView } from './content/common/view.types';\nimport { ViewByLocation } from './content/view-by-location/ViewByLocation';\nimport { ViewtByLot } from './content/view-by-lot/ViewByLot';\n\ntype Props = { devis: DevisModel, viewConfig: ViewConfig };\n\nexport const Devis: React.FC<Props> = (props: Props) => {\n  const { devis, viewConfig } = props;\n\n  const ContentView = getContentView(viewConfig);\n\n  return (\n    <div className=\"devis\">\n      <div className=\"d-flex\">\n        <div className=\"devis-logo mr-4\"></div>\n        <div className=\"devis-title d-flex align-items-center\">{devis.title}</div>\n      </div>\n      <br /><br />\n      <Header company={devis.company} deal={devis.deal} date={devis.date}></Header>\n      <br /><br />\n      <ContentView sections={devis.sections} locations={devis.locations}></ContentView>\n      <br /><br />\n      <Footer devis={devis}></Footer>\n    </div>\n  );\n};\n\nfunction getContentView(viewConfig: ViewConfig): ContentView {\n  switch (viewConfig.displayMode) {\n    case DisplayMode.BY_LOCATION: return ViewByLocation;\n    case DisplayMode.BY_LOT: return ViewtByLot;\n  }\n}\n","import React from 'react';\nimport './Tools.css';\nimport { ViewConfig, DisplayMode } from '../config.types';\n\ntype ViewConfigHandler = (v: ViewConfig) => void;\ntype Props = {viewConfigChange: ViewConfigHandler, viewConfig: ViewConfig}\n\nexport const Tools: React.FC<Props> = (props: Props) => {\n  const {viewConfig} = props;\n\n  const setByLot = () => props.viewConfigChange({displayMode: DisplayMode.BY_LOT});\n  const setByLocation = () => props.viewConfigChange({displayMode: DisplayMode.BY_LOCATION});\n\n  return (\n    <nav>\n      <ul className=\"nav flex-column nav-pills\">\n        { Link('Par lot',   viewConfig.displayMode ===  DisplayMode.BY_LOT,      setByLot) }\n        { Link('Par pièce', viewConfig.displayMode ===  DisplayMode.BY_LOCATION, setByLocation)  }\n      </ul>\n    </nav>\n  );\n};\n\nfunction Link(label: string, active: boolean, callback: () => void) {\n  const cssClass = active ? \"nav-link active\" : \"nav-link\";\n\n  return (\n    <li className=\"nav-item\" onClick={callback}>\n      <span className={cssClass}>{label}</span>\n    </li>\n  )\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Devis } from './devis/Devis';\nimport { useDevis } from './devis/useDevis';\nimport { Tools } from './tools/Tools';\nimport { ViewConfig, DEFAULT_VIEW_CONFIG } from './config.types';\n\nconst Loading = () => {\n  return (\n    <h4 className=\"h4\">\n      loading..\n    </h4>\n  );\n};\n\nconst App: React.FC = () => {\n  const [ viewConfig, setViewConfig ] = useState<ViewConfig>(DEFAULT_VIEW_CONFIG);\n  const { loading, devis } = useDevis(\"/travaux.json\");\n\n  return loading ? Loading() : (\n    <div className=\"App\">\n      <Tools viewConfig={viewConfig} viewConfigChange={setViewConfig}></Tools>\n      <Devis viewConfig={viewConfig} devis={devis}></Devis>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport { Devis } from \"./devis.types\";\n\n/**\n * Fetch devis from Devis-pro endpoint\n * @param url Devis-pro url\n */\nexport const useDevis = (url: string) => {\n  const [devis, setDevis] = useState<Devis>();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    async function fetchData(): Promise<any> {\n      const response = await fetch(url);\n      const json = await response.json();\n      setDevis(json);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [url]);\n\n  return { loading, devis };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// es2019 shim\n// eslint-disable-next-line\nArray.prototype.flatMap = function(lambda) { \n    return Array.prototype.concat.apply([], this.map(lambda)); \n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}